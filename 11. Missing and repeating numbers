#include <bits/stdc++.h>
#define ll long long int

pair<int,int> missingAndRepeating(vector<int> &arr, int n)
{
	// Write your code here 
	int in_xor=0,cur_xor=0;
	for(int i=1;i<=n;i++)
		in_xor ^=i;
	
	for(auto it:arr)
		cur_xor ^= it;
	
	ll val1 = in_xor^cur_xor; // X^Y
	int pos = val1& ~(val1-1);
	ll val2=0,val3=0; //val2 to store all the element having same rightmost set bit as in val1,
	                  //val3 for those which doesn't have
	for(auto it:arr)
	{
		if(pos&it)
			val2 ^= it;
		else	
			val3 ^= it;
	}
	for(int i=1;i<=n;i++)
	{
		if(pos&i)
			val2 ^= i;
		else	
			val3 ^= i;
	}

	// Now we will have a missing and a repeated number in val2 and val3
	int c=0;
	for(auto it:arr)
	{
		if(it==val2)
			c++;
	}
	if(c==2)
		return {val3,val2};
	else
		return {val2,val3};


	
	
}
// TC :- O(n)
// SC :- O(1)
