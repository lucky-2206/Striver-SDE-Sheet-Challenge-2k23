#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
     vector<int>ans;
    if(!root)
        return ans;
    queue<pair<BinaryTreeNode<int>*,int>>q;
     map<int,int>mp;
    q.push({root,0});
    while(!q.empty())
    {
        auto it = q.front();
        q.pop();
        auto node = it.first;
        int ver = it.second;
        mp[ver]=node->data;
        if(node->left)
            q.push({node->left,ver-1});
        if(node->right)
            q.push({node->right,ver+1});
    }

    for(auto it:mp)
    {
            ans.push_back(it.second);
    }
    return ans;
    
}

// TC :- O(N)
// SC :- O(N)
