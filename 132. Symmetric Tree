/*****************************************************

    Following is the Binary Tree node structure:
    
    class BinaryTreeNode {
        public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
        
        ~BinaryTreeNode() {
            if(left) 
                delete left;
            if(right) 
                delete right;
        }
    };

******************************************************/
bool check(BinaryTreeNode<int>*lRoot,BinaryTreeNode<int>*rRoot)
{
    if(!lRoot || !rRoot)
        return lRoot==rRoot;
    
    return (lRoot->data==rRoot->data)&&check(lRoot->left,rRoot->right)&&check(lRoot->right,rRoot->left);
}

bool isSymmetric(BinaryTreeNode<int>* root)
{
    // Write your code here.  
    if(root==NULL||check(root->left,root->right))
        return true;
    return false;  
}

// TC :- O(N)
// SC :- O(N)
