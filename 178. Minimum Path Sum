#include <bits/stdc++.h> 

int calc(int x,int y,vector<vector<int>>&grid,vector<vector<int>>&dp)
{
    if(x==0&&y==0)
        return grid[x][y];
    if(x<0||y<0)
        return 1e8;

    if(dp[x][y]!=-1)
        return dp[x][y];
    
    int choice1 = grid[x][y]+calc(x-1,y,grid,dp);
    int choice2 = grid[x][y]+calc(x,y-1,grid,dp);

    return dp[x][y]= min(choice1,choice2);
}
int minSumPath(vector<vector<int>> &grid) {
    // Write your code here.

    int n=grid.size();
    int m=grid[0].size();
    vector<vector<int>>dp(n,vector<int>(m,-1));
    return calc(n-1,m-1,grid,dp);
}

// TC :- O(n*m)
// SC :- O(n*m)
