#include <bits/stdc++.h> 
bool calc(int in,int n,int k,vector<int>&arr,vector<vector<int>>&dp)
{
    if(k==0)
        return true;
    if(in==n)
        return false;
    if(dp[in][k]!=-1)
        return dp[in][k];
    bool pick=false,npick;
    if(k-arr[in]>=0)
        pick = calc(in+1,n,k-arr[in],arr,dp);
    npick = calc(in+1,n,k,arr,dp);
    return dp[in][k] = pick|npick;
}
bool subsetSumToK(int n, int k, vector<int> &arr) {
    // Write your code here.
    vector<vector<int>>dp(n,vector<int>(k+1,-1));
    if(calc(0,n,k,arr,dp))
        return true;
    return false;
}

// TC :- O(N*K)
// SC :- O(N*K)
