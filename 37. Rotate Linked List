/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
     Node* p1 = head;
     Node* p2 = head;     
     int len=0;
     while(p1!=NULL)
     {
          len++;
          p1 = p1->next;
     }
     k = k%len;
     p1 = head;
     for(int i=1;i<len-k;i++)
          p1 = p1->next;
     while(p2->next!=NULL)
          p2 = p2->next;
     
     p2->next = head;
     head = p1->next;
     p1->next = NULL;
     return head;
}
// TC :- O(len)+O(len-(k%len))
// SC :- O(1)
