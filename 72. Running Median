#include <bits/stdc++.h>
void findMedian(int *arr, int n)
{
    // Write your code here
    priority_queue<int>pq_max;
    priority_queue<int,vector<int>,greater<int>>pq_min;
    for(int i=0;i<n;i++)
    {
        int num = arr[i];
        if(pq_max.empty()||pq_max.top()>num)
            pq_max.push(num);
        else
            pq_min.push(num);
        
        int n1 = pq_max.size();
        int n2 = pq_min.size();
        if(n2>n1+1)
        {
            pq_max.push(pq_min.top());
            pq_min.pop();
        }
        if(n1>n2+1)
        {
            pq_min.push(pq_max.top());
            pq_max.pop();
        }
        if(i%2==0)
        {
            int ans;
            if(pq_max.size()>pq_min.size())
                ans = pq_max.top();
            else    
                ans = pq_min.top();
            cout<<ans<<" ";
        }
        else
            cout<<(pq_max.top()+pq_min.top())/2<<" ";
    }
}

// TC :-O(NLogN)
// SC :-O(2*N)
