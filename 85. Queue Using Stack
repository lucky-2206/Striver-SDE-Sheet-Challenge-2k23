class Queue {
    // Define the data members(if any) here.
    stack<int>s1,s2;
    int ne;
    
    public:
    Queue() {
        // Initialize your data structure here.
        ne=0;
    }

    void enQueue(int val) {
        // Implement the enqueue() function.
       while(!s1.empty())
       {
           s2.push(s1.top());
           s1.pop();
       }
       s1.push(val);
       while(!s2.empty())
       {
           s1.push(s2.top());
           s2.pop();
       }
       ne++;
        
    }

    int deQueue() {
        // Implement the dequeue() function.
        if(isEmpty())
            return -1;
        int val = s1.top();
        s1.pop();
        ne--;
        return val;
    }

    int peek() {
        // Implement the peek() function here.
         if(isEmpty())
            return -1;
        return s1.top();
    }

    bool isEmpty() {
        // Implement the isEmpty() function here.
        return ne==0;
    }
};

// TC :- O(N)
// SC :- O(2N)
