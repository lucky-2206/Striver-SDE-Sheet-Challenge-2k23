bool isValidParenthesis(string s)
{
    // Write your code here.
    stack<char>st;
    for(auto it:s)
    {
        if(st.empty())
            st.push(it);
        else if(st.top()=='('&&it==')')
            st.pop();
        else if (st.top() == '{' && it == '}')
          st.pop();
        else if(st.top()=='['&&it==']')
            st.pop();
        else
            st.push(it);
    
    }
    if(st.size()==0)
        return true;
    return false;
}
// TC :-O(N)
// SC :-O(N)
